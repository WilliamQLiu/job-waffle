{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"AWS_ACCESS",
				"AWS_ACCESS_KEY_ID	class"
			],
			[
				"student_",
				"student_id_list	statement"
			],
			[
				"calc",
				"calc_department	function"
			],
			[
				"UserProfile",
				"UserProfileSerializer	class"
			],
			[
				"Date",
				"DateTimeField	class"
			],
			[
				"Radio",
				"RadioSelect	class"
			],
			[
				"Start",
				"start_date	statement"
			],
			[
				"CostCod",
				"CostCodeSerializer	class"
			],
			[
				"Time",
				"TimeSerializer	class"
			],
			[
				"find",
				"find_elements_by_link_text	function"
			],
			[
				"Program",
				"ProgramForm	class"
			],
			[
				"Pro",
				"ProgramResultsView	class"
			],
			[
				"time_",
				"time_to_delete	statement"
			],
			[
				"time",
				"time_to_delete	statement"
			],
			[
				"te",
				"TextField	class"
			],
			[
				"auth",
				"auth_views"
			],
			[
				"password",
				"password_reset	function"
			],
			[
				"user",
				"user_id"
			],
			[
				"get",
				"get	function"
			],
			[
				"name",
				"user_name"
			],
			[
				"Model",
				"ModelAdmin	import"
			],
			[
				"get_",
				"get_full_name	function"
			],
			[
				"my",
				"my_user_name	function"
			],
			[
				"Enter",
				"EnterTimeForm	class"
			],
			[
				"EnterProgram",
				"EnterProgramForm	class"
			],
			[
				"render",
				"render_to_response	function"
			],
			[
				"smart",
				"smart_unicode	statement"
			],
			[
				"da",
				"DateField	class"
			],
			[
				"EMAIL",
				"EMAIL_PORT  (variable)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3482,
				"line_ending": "Unix"
			}
		},
		{
			"file": "applicant/tests.py",
			"settings":
			{
				"buffer_size": 3472,
				"line_ending": "Unix"
			}
		},
		{
			"file": "employer/views.py",
			"settings":
			{
				"buffer_size": 7018,
				"line_ending": "Unix"
			}
		},
		{
			"file": "employer/forms.py",
			"settings":
			{
				"buffer_size": 1363,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/post_job.html",
			"settings":
			{
				"buffer_size": 1131,
				"line_ending": "Unix"
			}
		},
		{
			"file": "jobwaffle/urls.py",
			"settings":
			{
				"buffer_size": 3580,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 49.0,
		"selected_items":
		[
			[
				"Package Control: disable package",
				"Package Control: Disable Package"
			],
			[
				"Package Control: remove pack",
				"Package Control: Remove Package"
			],
			[
				"task",
				"Tasks: New document"
			],
			[
				"new ",
				"Tasks: New"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ena",
				"Package Control: Enable Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"Package Control: disa",
				"Package Control: Disable Package"
			],
			[
				"Package Control:disa",
				"Package Control: Disable Package"
			],
			[
				"Package Control: enable",
				"Package Control: Enable Package"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: rem",
				"Package Control: Remove Package"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 161.0,
		"history":
		[
			"view.options().set('wordWrap', False)",
			"View.options().set('wordWrap', False)",
			"view.options().set('wordWrap', False)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/williamliu/GitHub/job-waffle",
		"/Users/williamliu/GitHub/job-waffle/employer",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle"
	],
	"file_history":
	[
		"/Users/williamliu/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/williamliu/GitHub/job-waffle/templates/base.html",
		"/Users/williamliu/GitHub/job-waffle/employer/models.py",
		"/Users/williamliu/GitHub/job-waffle/templates/job_posting.html",
		"/Users/williamliu/GitHub/job-waffle/templates/find_job.html",
		"/Users/williamliu/GitHub/job-waffle/applicant/views.py",
		"/Users/williamliu/GitHub/job-waffle/templates/home.html",
		"/Users/williamliu/GitHub/job-waffle/functional_tests/test_functional.py",
		"/Users/williamliu/GitHub/job-waffle/templates/search.html",
		"/Users/williamliu/GitHub/job-waffle/applicant/models.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/urls.py",
		"/Users/williamliu/GitHub/job-waffle/README.html",
		"/Users/williamliu/GitHub/job-waffle/fixtures/initial_data",
		"/Users/williamliu/GitHub/job-waffle/employer/forms.py",
		"/Users/williamliu/GitHub/job-waffle/templates/search/search.html",
		"/Users/williamliu/GitHub/job-waffle/README.md",
		"/Users/williamliu/GitHub/job-waffle/applicant/serializers.py",
		"/Users/williamliu/GitHub/job-waffle/docs/sample_data/employer.json",
		"/Users/williamliu/GitHub/job-waffle/employer/serializers.py",
		"/Users/williamliu/GitHub/job-waffle/templates/job_view.html",
		"/Users/williamliu/Desktop/social_login",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings/base.py",
		"/Users/williamliu/GitHub/job-waffle/fixtures/site",
		"/Users/williamliu/GitHub/job-waffle/employer/tests.py",
		"/Users/williamliu/GitHub/job-waffle/employer/views.py",
		"/Users/williamliu/GitHub/job-waffle/employer/search_indexes.py",
		"/Users/williamliu/GitHub/job-waffle/requirements.txt",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings/dev_will.py",
		"/Users/williamliu/GitHub/job-waffle/applicant/forms.py",
		"/Users/williamliu/GitHub/job-waffle/.travis.yml",
		"/Users/williamliu/GitHub/job-waffle/templates/search/indexes/employer/job_text.txt",
		"/Users/williamliu/GitHub/job-waffle/config/sample_data/employer.json",
		"/Users/williamliu/GitHub/job-waffle/applicant/tests.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings/production.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/wsgi.py",
		"/Users/williamliu/GitHub/job-waffle/manage.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/tests.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/dataentry/wsgi.py",
		"/Users/williamliu/.bash_profile",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings/secret.py",
		"/Users/williamliu/GitHub/job-waffle/config/database.yml.travis",
		"/Users/williamliu/GitHub/job-waffle/database.yml.travis",
		"/Users/williamliu/GitHub/job-waffle/.gitignore",
		"/Users/williamliu/GitHub/job-waffle/templates/accounts/login.html",
		"/Users/williamliu/GitHub/python-examples/elasticsearch/simple_search.py",
		"/Users/williamliu/.oh-my-zsh",
		"/Users/williamliu/.zshrc",
		"/usr/local/var/postgres/pg_hba.conf",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/old_settings.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings/staging.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/settings/__init__.py",
		"/Users/williamliu/Downloads/client_secret_413124145982-c0rai9kn2gdoe9bm7kl18qmjca0spaqr.apps.googleusercontent.com.json",
		"/Users/williamliu/GitHub/job-waffle/templates/socialdone.html",
		"/Users/williamliu/GitHub/job-waffle/applicant/tasks.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/secret.py",
		"/Users/williamliu/GitHub/job-waffle/employer/tasks.py",
		"/Users/williamliu/GitHub/job-waffle/jobwaffle/celery.py",
		"/Users/williamliu/GitHub/job-waffle/static/css/bootstrap.min.css",
		"/Users/williamliu/GitHub/job-waffle/development.yml",
		"/Users/williamliu/GitHub/job-waffle/db.sqlite3",
		"/Users/williamliu/.ssh/config",
		"/Users/williamliu/GitHub/job-waffle/env_vars/base.yml",
		"/Users/williamliu/GitHub/job-waffle/roles/web/tasks/setup_git_repo.yml",
		"/Users/williamliu/.ssh/known_hosts",
		"/Users/williamliu/.ssh/id_rsa",
		"/Users/williamliu/GitHub/job-waffle/ansible.cfg",
		"/private/etc/ansible/test",
		"/private/etc/ansible/ansible.cfg",
		"/private/etc/ssh_config",
		"/private/etc/sshd_confi",
		"/private/etc/ssh_config~orig",
		"/Users/williamliu/.ssh/id_rsa.pub",
		"/Users/williamliu/GitHub/job-waffle/sshknownhosts.py",
		"/Users/williamliu/GitHub/Python/mongodb_class/final_question1",
		"/Users/williamliu/GitHub/Python/pandas/categoricals.py",
		"/Users/williamliu/GitHub/Python/pandas/categoricals_grades.py",
		"/Users/williamliu/GitHub/Python/pandas/lesson4pandas.py",
		"/Users/williamliu/Dropbox/mongodb_class/chapter_3_schema_design.7aab33c35594/homework_3_1/students.json",
		"/Users/williamliu/GitHub/Python/pymongo/week3/hw3.py",
		"/Users/williamliu/Dropbox/mongodb_class/chapter_2_crud.3da6a46d8250/homework_2_2/grades.json",
		"/Users/williamliu/GitHub/Python/pymongo/week2/hw2.py",
		"/Users/williamliu/GitHub/Python/pymongo/week3/homework_3_2/hw3-2and3-3/hw3-2and3-3/blogPostDAO.py",
		"/Users/williamliu/GitHub/Python/pymongo/week2/pymongo_find_find_one_and_cursors/using_find.py",
		"/Users/williamliu/GitHub/Python/pymongo/week3/homework_3_2/hw3-2and3-3/hw3-2and3-3/sessionDAO.py",
		"/Users/williamliu/GitHub/Python/pymongo/week3/homework_3_2/hw3-2and3-3/hw3-2and3-3/blog.py",
		"/Users/williamliu/GitHub/Python/pymongo/week3/homework_3_2/hw3-2and3-3/hw3-2and3-3/validate.py",
		"/Users/williamliu/GitHub/Python/pymongo/week3/homework_3_2/hw3-2and3-3/hw3-2and3-3/userDAO.py",
		"/Users/williamliu/GitHub/Python/pymongo/week2/pymongo_find_and_modify/using_find_and_modify.py",
		"/private/etc/ansible/hosts",
		"/Users/williamliu/GitHub/Python/pytesseract/pdf_example.py",
		"/Users/williamliu/GitHub/Python/pymongo/week2/pymongo_sort_skip_and_limit/using_limit_skip_sort.py",
		"/Users/williamliu/GitHub/Python/pymongo/week2/pymongo_inserting/using_insert.py",
		"/Users/williamliu/GitHub/Python/pymongo/week2/pymongo_inserting/insert_quiz.py",
		"/Users/williamliu/GitHub/Python/pymongo/using_find.py",
		"/Users/williamliu/GitHub/Python/pymongo/hw2-3/userDAO.py",
		"/Users/williamliu/GitHub/Python/Pickle/pickle_sample.py",
		"/Users/williamliu/GitHub/Python/learn.TODO",
		"/Users/williamliu/GitHub/Python/Celery/tasks.py",
		"/Users/williamliu/GitHub/surveys/login",
		"/Users/williamliu/Downloads/xkcd.py",
		"/Users/williamliu/GitHub/Python/logging/sample_logging.py",
		"/Users/williamliu/GitHub/Python/decorators/sample_decorator.py",
		"/Users/williamliu/GitHub/Python/vowpal_rabbit/tutorial_logreg.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/calculations.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/encrypt.html",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/encrypt.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/base.html",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/program_create.html",
		"/Users/williamliu/GitHub/MHADjango/datasite/dataentry/settings.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/tasks.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/views.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/report.html",
		"/Users/williamliu/GitHub/MHADjango/datasite/dataentry/urls.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/calculations_numbers.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/serializers.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/hr.html",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/models.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/misc.html",
		"/Users/williamliu/GitHub/Python/pycrypto/sample_pycrypto.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/templates/program_list.html",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/test_programs.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/functional_tests/test_functional.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/timesheets/admin.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/pytest.ini",
		"/Users/williamliu/GitHub/MHADjango/datasite/functional_tests.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/tests/__init__.py",
		"/Users/williamliu/GitHub/MHADjango/datasite/tests/functional_tests.py"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"/Users/williamliu/GitHub/job-waffle",
			"/Users/williamliu/GitHub/",
			"/Users/williamliu/GitHub/job-waffle/",
			"/Users/williamliu/GitHub/Python/GAClass",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"jobform",
			"change",
			"job_post",
			"job_search",
			"login",
			"occupation",
			"type",
			"boolean",
			"job",
			"routers",
			"resume",
			"filterset",
			"base",
			"database_url",
			"secure",
			"secure_proxy",
			"database_url",
			"timesheet",
			"social",
			"trans",
			"base.html",
			"installed",
			"Authentication",
			"static",
			"secret_key",
			"SECRET_KEY",
			"registration_register",
			"login",
			"celery",
			"stricthostkey",
			"strict",
			"SSH",
			"project_root",
			"git",
			"ansible_ssh_user",
			"IdentityFile",
			"known_host",
			"hosts",
			"git_repo",
			"XXX",
			"mjob",
			"program_select",
			"date_select",
			"formset",
			"encrypt",
			"blank",
			"group",
			"groupby",
			"conftest.py",
			"decode",
			"blank",
			"data",
			"UserProfile",
			"stillhere",
			"User",
			"i=",
			"data_types",
			"date_types",
			"data",
			"freqData",
			"freq",
			"settings",
			"js",
			"javascript",
			"celery",
			"group",
			"APIlink",
			"serializers",
			"from",
			"data",
			"program",
			"program_list",
			"program-list",
			"monthly",
			"None",
			"listview",
			"generic",
			"MyEncoder",
			"calendar",
			"df.",
			"df.cacl",
			"register",
			"timesheet",
			"timesheets",
			"listview",
			"decorators",
			"APIView",
			"ProgramViewSet",
			"render_to_response",
			"viewsets",
			"program",
			"views.",
			"time",
			"UserViewSet",
			"serializer",
			".apply",
			"map\nmap",
			".map",
			"admin",
			"coverage",
			"wait",
			"pause",
			"program-list",
			"blank",
			"body",
			"$",
			"select",
			"all",
			"enter",
			"all",
			"protocol",
			"message",
			"user_login",
			"block content",
			"enter",
			"tab",
			"enter",
			"tab",
			"entertime",
			"EnterTime",
			"input",
			"inherit",
			"color: inherit",
			"white",
			"p",
			"line",
			"space",
			"spaces"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"dataset",
			"ic_svy"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3482,
						"regions":
						{
						},
						"selection":
						[
							[
								3071,
								3071
							]
						],
						"settings":
						{
							"auto_complete": false,
							"color_scheme": "Packages/MarkdownEditing/MarkdownEditor.tmTheme",
							"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "applicant/tests.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3472,
						"regions":
						{
						},
						"selection":
						[
							[
								3306,
								3306
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 410.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "employer/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7018,
						"regions":
						{
						},
						"selection":
						[
							[
								2308,
								2308
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 600.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "employer/forms.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1363,
						"regions":
						{
						},
						"selection":
						[
							[
								1286,
								1286
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "templates/post_job.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1131,
						"regions":
						{
						},
						"selection":
						[
							[
								1000,
								1000
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "jobwaffle/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3580,
						"regions":
						{
						},
						"selection":
						[
							[
								1453,
								1453
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 364.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.anaconda_documentation":
	{
		"height": 194.0
	},
	"output.exec":
	{
		"height": 165.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.markdown":
	{
		"height": 90.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"project": "jobwaffle.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
